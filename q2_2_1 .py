# -*- coding: utf-8 -*-
"""q2_2_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fZIyJcq2V_VQbMYCd3JBvIGzbmwU6TL0
"""

#from google.colab import files
#uploaded = files.upload()
#!pip install python-bitcoinlib

import bitcoin.wallet
from bitcoin.core import COIN, b2lx, serialize, x, lx, b2x
from utils import *
from bitcoin.core.script import CScript, OP_DUP, OP_HASH160, OP_EQUALVERIFY, OP_CHECKSIG, SignatureHash, SIGHASH_ALL,OP_TRUE, OP_2, OP_3, OP_CHECKMULTISIG

bitcoin.SelectParams("testnet")
my_private_key = bitcoin.wallet.CBitcoinSecret("92i3QHTdRhrUN8qhQ3vSuYqT55JrYvZuTUPwzYKMikAeVgGbXTZ")
my_public_key = my_private_key.pub
my_address = bitcoin.wallet.P2PKHBitcoinAddress.from_pubkey(my_public_key)
print("mine", my_address)
first_private_key = bitcoin.wallet.CBitcoinSecret("91i1jn5mp4rcBLEEd5BB7uZkYh9Tn5qn5aLWJEQiSdCy6FiTizT")
first_public_key = first_private_key.pub
first_address = bitcoin.wallet.P2PKHBitcoinAddress.from_pubkey(first_public_key)
print("1st", first_address)
second_private_key = bitcoin.wallet.CBitcoinSecret("93RRXmvJA1CA2Hf5GkbTSCnMVdT9z8NLzVBmUMUpMLJEpi3GEmC")
second_public_key = second_private_key.pub
second_address = bitcoin.wallet.P2PKHBitcoinAddress.from_pubkey(second_public_key)
print("2nd", second_address)
third_private_key = bitcoin.wallet.CBitcoinSecret("928CRq2HCewtTVUsVdL5Q82KWaub4aonK83qoWt1ACqqXiGmRBs")
third_public_key = third_private_key.pub
third_address = bitcoin.wallet.P2PKHBitcoinAddress.from_pubkey(third_public_key)
print("3rd", third_address)

def P2PKH_scriptPubKey(address):
    return [OP_DUP, OP_HASH160, address, OP_EQUALVERIFY, OP_CHECKSIG]

def P2PKH_scriptSig(txin, txout, txin_scriptPubKey):
    signature = create_OP_CHECKSIG_signature(txin, txout, txin_scriptPubKey, my_private_key)
    return[signature, my_public_key]

def multi_P2PKH_scriptPubkey():
    return [OP_2, first_public_key, second_public_key, third_public_key, OP_3, OP_CHECKMULTISIG]

def send_from_P2PKH_transaction(amount_to_send, txid_to_spend, utxo_index,
                                txout_scriptPubKey):
    txout = create_txout(amount_to_send, txout_scriptPubKey)

    txin_scriptPubKey = P2PKH_scriptPubKey(my_address)
    txin = create_txin(txid_to_spend, utxo_index)
    txin_scriptSig = P2PKH_scriptSig(txin, txout, txin_scriptPubKey)

    new_tx = create_signed_transaction(txin, txout, txin_scriptPubKey,
                                       txin_scriptSig)

    return broadcast_transaction(new_tx)

if __name__ == '__main__':
    ######################################################################
    amount_to_send = 0.0005
    txid_to_spend = ('861c9dc7c92919ad0f8c4a9b7b4ca7fbe2c98000da91857b05a0afcf70beadea') 
    utxo_index = 1
    ######################################################################

    print(my_address)
    print(my_public_key.hex()) 
    print(my_private_key.hex()) 
    txout_scriptPubKey = multi_P2PKH_scriptPubkey()
    response = send_from_P2PKH_transaction(amount_to_send, txid_to_spend, utxo_index, txout_scriptPubKey)
    print(response.status_code, response.reason)
    print(response.text)